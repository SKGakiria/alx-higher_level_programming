0-add_integer.py
================

This module defines an integer addition function ``add_integer(a, b=98)``.

Using ``add_integer``
---------------------
``add_integer(...)``` returns the addition of its two arguments. For numbers, 
that the value is equivalent to using the ``+`` operator.

    >>> add.integer = __import__('0-add_integer').add_integer
    >>> add_integer(6, 8)
    14

    >>> add_integer(6, -8)
    -2

The function can be used for both integer and float values.

    >>> add_integer(6.0, 8.0)
    14

Take note that floats are casted to ints before addition is performed.

    >>> add_integer(6.8, 1.2)
    8

    >>>	add_integer(-6.8, -1.2)
    -8

    >>>	add_integer(4.8, -5)
    -2

The second argument is 98 by default.

    >>>	add_integer(2)
    100

Non_Numbers
------------
``add_integer()`` expects that both arguments are either integers or floats.
TypeError exception is raised if neither argument is an integer or float.

    >>>	add_integer("look", 8)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>>	add_integer(6, "look")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>>	add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>>	add_integer(4.8, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

If both arguments are not integers or floats, TypeError exception message 
is only printed for the first argument.

    >>>	add_integer("look", "around")
    Traceback (most recent call last):
    TypeError: a must be an integer

Function fails if infinity is provided.

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(float('inf'), 4)
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

with NaN numbers too.

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(float('nan'), 4)
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
