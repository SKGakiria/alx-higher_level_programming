2-matrix_divided.py
===================

This module defines a matrix division function ``matrix_divided(matrix, div)``.

Using ``matrix_divided``
---------------------
``matrix_divided(...)`` returns a new matrix, a copy of the``matrix``.
All elements to be divided by ``div``, rounded to 2 decimal places.

    >>>	matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>>	matrix = [
            [3, 6, 9],
	    [12, 15, 18]
	]
    >>>	print(matrix_divided(matrix, 3))
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

    >>> matrix = [
            [1, 2, 3],
	    [4, 5, 6]
	]
    >>>	print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Original matrix left unchanged.

    >>>	print(matrix)
    [[1, 2, 3], [4, 5, 6]]

Apart from integers, float values can also be used.

    >>>	matrix = [
            [1.1, -2.2, 3.3]
	    [4.4, 5.5, -6.6]
	]
    >>>	print(matrix_divided(matrix, 3))
    [[0.37, 0.73, 1.1]], [1.47, 1.83, -2.2]]

Combination of both integer and float values.

    >>>	matrix = [
            [1, -2.2, 3]
            [4.4, 5, -6.6]
        ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.73, 1.0]], [-2.2, 2.33, 2.67]]

Invalid Matrices
----------------
The ``matrix`` must be a list of lists of integers or floats, 
otherwise a TypeError exception message is raised.

    >>>	matrix = "not a list"
    >>>	print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>>	matrix = None
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>>	matrix = []
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>>	matrix = [
            [1, 2, 3]
            [4, 5, "not number"]
        ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Each row of the ``matrix`` must be of the same size, 
otherwise a TypeError exception message is raised.

    >>>	matrix = [
            [1, 2, 3]
            [4, 5, 6, 7, 8]
        ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Invalid Division
----------------
``div`` must be an integer or float, 
otherwise a TypeError exception message is raised.

    >>>	matrix = [
            [1, 2, 3]
            [4, 5, 6]
        ]
    >>> print(matrix_divided(matrix, "not number"))
    Traceback (most recent call last):
    TypeError: div must be a number

    >>>	print(matrix_divided(matrix, "None"))
    Traceback (most recent call last):
    TypeError: div must be a number

``div`` canâ€™t be equal to 0, 
otherwise a ZeroDivisionError exception message is raised.

    >>>	print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero


